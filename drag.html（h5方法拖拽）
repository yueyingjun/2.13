<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
	<title>拖拽</title>
	<script src="hgc.js"></script>
</head>
<style>
	*{
	margin: 0;
	padding: 0;
	list-style: none;
	}
	.box{
		width: 200px;
		height: 200px;
		margin:0 auto;
		background: yellow;
		position: absolute;
		left: 50%;
		top: 50%;
		margin-left: -100px;
		margin-top:-100px;
		text-align: center;
		line-height: 200px;
		cursor: pointer;
	}
</style>
<body>
	<div class="box">对<!-- ！就是拖我！ --></div>
</body>
<script>

class Drag{
    constructor(obj){
		this.obj=document.getElementsByClassName("box");      
		this.cw=document.documentElement.clientWidth;   
		this.ch=document.documentElement.clientHeight;
		this.ox=0;
		this.oy=0;
		this.cx=0;
		this.oy=0;
		// this.ow=this.obj.offsetWidth;     
		// this.oh=this.obj.offsetHeight;
		this.left=0;                
		this.top=0;
    }
	drags(){
	    this.down();
	}
    down(){          
    	var that=this;   
    	this.obj.onmousedown=function(e){
    		var ev=e||window.event;	
    	    if(eve.preventDefault){
		     		eve.preventDefault();
		     	}else{
		     		eve.returnValue=false;
		     	}     
	         that.ox=ev.offsetX;
	         that.oy=ev.offsetY;
	         that.move();
	         that.up();
    	}   
    }
	move(){         
		var that=this;      
		document.onmousemove=function(e){
		 	var ev=e||window.event;
		    if(eve.preventDefault){
		     		eve.preventDefault();
		     	}else{
		     		eve.returnValue=false;
		     	}
		 	that.cx=ev.clientX;
		 	that.cy=ev.clientY;
		 	that.left=that.cx-that.ox;
		 	that.top=that.cy-that.oy;
	 		if (that.left<=0) {           
				that.left=0;
			};
			if (that.top<=0) {
				that.top=0;
			};
	        if (that.left>=that.cw-that.ow) {
				that.left=that.cw-that.ow;
			};
	        if (that.top>=that.ch-that.oh) {
				that.top=that.ch-that.oh;
			};
			that.obj.style.left=that.left+"px";   
			that.obj.style.top=that.top+"px";
		 }
	}
    up(){      
         var that=this;    	
	    document.onmouseup=function(){ 
	    	    that.xishu=0.9;
	     		var t=setInterval(function(){
	     			that.lenx*=that.xishu;
	     			that.leny*=that.xishu;
	     			if(Math.abs(that.lenx)>=Math.abs(that.leny)){
	                    if(Math.abs(that.lenx)<=1){
	                    	clearInterval(t)
	                    }
	     			}else if(Math.abs(that.leny)<=1){
	     				clearInterval(t)
	     			}
			        if(that.x1<=0){that.x1=0};
			        if(that.y1<=0){yy=0};
			        if(that.x1>that.xx){that.x1=that.xx};
			        if(that.y1>that.yy){that.y1=that.yy};
	     			that.obj.style.left=that.lenx+that.obj.offsetLeft+"px";
	     			that.obj.style.top=that.leny+that.obj.offsetTop+"px";
	     		},60)  
	    	document.onmousemove=null;
			document.onmouseup=null;
	    } 		   
    }
}

var box=document.querySelector(".box");	
var newobj=new Drag();
// newobj.constructor(box);
newobj.drags();

/*****************************************************************/
class Drag{
	constructor(){

	}
	div.onmousedown(e){
      var e=e||window.event;
      if () {};
	    if(eve.preventDefault){
			eve.preventDefault();
		}else{
			eve.returnValue=false;
		}
		document.mousrover(){
			
		}
		document.mousrup(){

		}
	}

}














</script>
</html>
